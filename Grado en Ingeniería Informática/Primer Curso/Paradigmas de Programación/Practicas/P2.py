#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.5 on Mon May  8 16:53:33 2023
#

from wx.adv import Sound
import suburbious_1 as codigCesar
import wx
import wx.lib.dialogs

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):

    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((900, 700))
        self.SetTitle("tablero")
        self.juego=None

        self.sizer_3 = wx.BoxSizer(wx.HORIZONTAL)

        self.sizer_4 = wx.BoxSizer(wx.VERTICAL)
        self.sizer_3.Add(self.sizer_4, 1, wx.EXPAND, 0)

        self.sizer_2 = wx.BoxSizer(wx.HORIZONTAL)  # adding this line should fix the error
        self.sizer_4.Add(self.sizer_2, 0, wx.ALL | wx.EXPAND, 0)

        self.button_10 = wx.Button(self, wx.ID_ANY, "Nueva partida")
        self.button_10.SetMinSize((100, 50))
        self.sizer_2.Add(self.button_10, 4, wx.ALL, 4)

        self.Bind(wx.EVT_BUTTON,self.reiniciar,self.button_10)

        self.checkbox_1 = wx.CheckBox(self, wx.ID_ANY, "Cronometro")
        self.checkbox_1.SetMinSize((100, 65))
        self.sizer_2.Add(self.checkbox_1, 0, 0, 0)

        self.Bind(wx.EVT_CHECKBOX, self.Tiempo, self.checkbox_1)
          
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_4.Add(sizer_5, 1, wx.EXPAND, 0)

        self.sizer_6 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Actual"), wx.VERTICAL)
        sizer_5.Add(self.sizer_6, 1, wx.EXPAND, 0)

        self.Intercambiar = wx.Button(self, wx.ID_ANY, "<->")
        self.Intercambiar.SetMinSize((0, 0))
        sizer_5.Add(self.Intercambiar, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND | wx.SHAPED, 0)


        self.sizer_7 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Almacen"), wx.VERTICAL)
        sizer_5.Add(self.sizer_7, 1, wx.EXPAND, 0)


        self.sizer_8 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, u"Puntuación"), wx.VERTICAL)
        self.sizer_4.Add(self.sizer_8, 1, wx.EXPAND, 0)


        self.sizer_9 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Turno"), wx.VERTICAL)
        self.sizer_4.Add(self.sizer_9, 1, wx.EXPAND, 0)

        self.SetSizer(self.sizer_3)
        self.filas=6
        self.columnas=6
        self.Layout()
        


    # Función para inicializar el juego
    def Iniciar(self):
        # Crea un GridSizer con el número de filas y columnas definidas por el usuario
        self.grid_sizer_1 = wx.GridSizer(self.getFilas(), self.getColumnas(), 3, 0)
        self.sizer_3.Add(self.grid_sizer_1, 1, wx.EXPAND, 0)
        i=0
        j=0
        sonido = Sound("./UnderwaterBubbleBy PE311303")
        sonido.Play()
        # Crea un botón para cada celda del tablero
        for i in range(self.getFilas()):
            for j in range(self.getColumnas()):
                coordenada = f"{chr(65 + i)}{j+1}"  # Calcula la coordenada correspondiente
                celda = wx.Button(self, label=self.juego.tab[i][j].car)  # Crea el botón
                celda.coordenada = coordenada  # Asigna la coordenada como atributo personalizado
                celda.Bind(wx.EVT_BUTTON, self.on_button_click)  # Asocia el evento de clic al botón
                self.grid_sizer_1.Add(celda, 0, wx.ALL | wx.EXPAND, 0)
        #Coloca el elemento actual
        self.actual=self.juego.elige_actual()
        self.juego.setActual(self.actual)
        self.actual=self.actual.car
        self.label_1 = wx.StaticText(self, wx.ID_ANY,self.actual)
        self.sizer_6.Add(self.label_1, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        #Coloco el almacén
        self.almacen="."
        self.label_2 = wx.StaticText(self, wx.ID_ANY, self.almacen )
        self.sizer_7.Add(self.label_2, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        #Empieza la puntuacion
        self.label_3 = wx.StaticText(self, wx.ID_ANY, str(self.juego.calcula_puntos()), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.label_3.SetMinSize((80, 80))
        self.label_3.SetFont(wx.Font(20, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.sizer_8.Add(self.label_3, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        #Empieza el turno
        self.turno=1
        self.label_4 = wx.StaticText(self, wx.ID_ANY, str(self.turno), style=wx.ALIGN_CENTER_HORIZONTAL)
        self.label_4.SetMinSize((80, 80))
        self.label_4.SetFont(wx.Font(20, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL, 0, "Segoe UI"))
        self.sizer_9.Add(self.label_4, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL, 0)
        
        # Asocia el evento de clic del botón "Intercambiar" a la función "cambio_almacen" de "codigCesar"
        self.Intercambiar.Bind(wx.EVT_BUTTON, self.Cambio)
    
    def Cambio(self,event):
        sonido = Sound("./TrapBigBearSnaps BFX022506")
        sonido.Play()
        if self.almacen == ".":
            self.almacen = self.actual
            self.label_2.LabelText = str(self.almacen)
            self.actual = self.juego.elige_actual().car
            self.label_1.LabelText = str(self.actual)
        else:
            car = self.almacen
            self.almacen = '.'
            self.label_2.LabelText = str(self.almacen)
            self.actual = car
            self.label_1.LabelText = str(self.actual)
       # Llamar a la función cambio_almacen y actualizar los valores de Actual y Almacen

    def setFrame(self,frame):
        self.frame=frame

    def getFrame(self):
        return self.frame

    def reiniciar(self, event):
        # Resetea las variables del juego
        self.Hide()
        app = MyApp(0)
        if coordenada != 0:
            i+=1
        app.MainLoop()

    # Función para manejar el evento de clic en un botón
    def on_button_click(self, event):  

        self.timer = wx.Timer(self)
        self.Bind(wx.EVT_TIMER, self.Tiempo, self.timer)
        self.timer.Start(1000)

        button = event.GetEventObject()
        coordenada = button.coordenada
        
        # Comprueba si la jugada es válida
        if self.juego.jugada_correcta(coordenada):
            # Realiza una jugada en el tablero
            fin_de_partida = self.juego.jugar(coordenada)
            if fin_de_partida:
                wx.MessageBox("Fin de la partida", "Partida terminada", wx.OK | wx.ICON_INFORMATION)
            self.actualizar_botones()
            self.actualizar_actual()
            self.actualizar_puntuacion()
            self.actualizar_turno()
        else:
            sonido = Sound("./ImpactBig8Bit GFX030903")
            sonido.Play()
            wx.MessageBox("Jugada no válida", "Error", wx.OK | wx.ICON_ERROR)

    def actualizar_botones(self):
        sonido = Sound("./Swish20MultipleSwi PE117901")
        sonido.Play()
        print(self.juego)
        for i in range(self.getFilas()):
            for j in range(self.getColumnas()):
                # Obtiene el botón correspondiente a la celda en la posición i, j
                boton = self.grid_sizer_1.GetItem(i * self.getColumnas() + j).GetWindow()
                # Obtiene el valor de la celda en la posición i, j
                valor_celda = self.juego.tab[i][j].car
                boton.SetLabel(valor_celda)
    
    def actualizar_actual(self):
        self.actual=self.juego.elige_actual()
        self.juego.setActual(self.actual)
        self.actual=self.actual.car
        self.label_1.SetLabel(str(self.actual))

        
    def actualizar_puntuacion(self):
        self.puntos=self.juego.calcula_puntos()
        self.label_3.SetLabel(str(self.puntos))

    def  actualizar_turno(self):
        self.turno += 1
        self.label_4.SetLabel(str(self.turno))

    def Tiempo(self, event):
        if self.checkbox_1.GetValue():
            self.countdown = 20
            if hasattr(self, 'timer'):
                self.timer.Stop()
            if hasattr(self, 'label_15'):
                for i, item in enumerate(self.sizer_2.GetChildren()):
                    if item.Window == self.label_15:
                        self.sizer_2.Remove(i)
                        self.Layout()
                        break

            self.label_15 = wx.StaticText(self, label=f"Tiempo restante {self.countdown} segundos")
            self.timer = wx.Timer(self)
            self.Bind(wx.EVT_TIMER, self.restaTiempo, self.timer)
            self.timer.Start(1000)
            self.sizer_2.Insert(0, self.label_15, 0, wx.EXPAND | wx.ALIGN_LEFT, 10)
            self.Layout()
            self.label_15.Show()
            self.checkbox_1.Disable()
            self.Destroy()
    
    def restaTiempo(self, event):
        sonido = Sound("./MetalPipeScrapeOnR PE355301")
        sonido.Play()
        self.countdown -= 1
        self.label_15.SetLabel(f"Tiempo restante {self.countdown} segundos")
        if self.countdown == 0:
            self.timer.Stop()
            sonido = Sound("./alarm.mp3")
            sonido.Play()
            wx.MessageBox("Se ha quedado sin tiempo", "Tiempo agotado", wx.OK | wx.ICON_INFORMATION)
            self.Destroy()


    # Funciones para establecer y obtener el juego, número de filas y número de columnas
    def setJuego(self, juego):
        self.juego = juego
        print( self.juego )

    def getJuego(self, i, j):
        return self.juego()[i,j]
    
    def setFilas(self, filas):
        self.filas = filas

    def setColumnas(self, columnas):
        self.columnas = columnas

    def getFilas(self):
        return self.filas
    
    def getColumnas(self):
        return self.columnas
    
        # end wxGlade

# end of class MyFrame

class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((500, 200))
        self.SetTitle("dialog")

        self.sizer_1 = wx.WrapSizer(wx.HORIZONTAL)

        self.sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_1.Add(self.sizer_3, 0, 0, 0)

        sizer_4 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, "Tipo de partida"), wx.VERTICAL)
        self.sizer_3.Add(sizer_4, 1, wx.ALL | wx.EXPAND, 0)

        self.radio_btn_1 = wx.RadioButton(self, wx.ID_ANY, "Tablero a partir de un fichero")
        self.radio_btn_1.SetMinSize((170, 35))
        sizer_4.Add(self.radio_btn_1, 0, 0, 0)


        self.radio_btn_2 = wx.RadioButton(self, wx.ID_ANY, "Tablero aleatorio")
        self.radio_btn_2.SetMinSize((170, 35))
        sizer_4.Add(self.radio_btn_2, 0, 0, 0)

        self.radio_btn_3 = wx.RadioButton(self, wx.ID_ANY, "Tablero aleatorio 6x6")
        self.radio_btn_3.SetMinSize((170, 35))
        sizer_4.Add(self.radio_btn_3, 0, 0, 0)

        self.sizer_5 = wx.StaticBoxSizer(wx.StaticBox(self, wx.ID_ANY, u"Número de filas y columnas"), wx.VERTICAL)
        self.sizer_3.Add(self.sizer_5, 1, wx.EXPAND, 0)

        self.sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_5.Add(self.sizer_6, 1, wx.EXPAND, 0)

        self.label_1 = wx.StaticText(self, wx.ID_ANY, u"Número de filas :")
        self.label_1.SetMinSize((126, 40))
        self.sizer_6.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 0)

        self.NumeroF = wx.SpinCtrl(self, wx.ID_ANY, "0", min=0, max=8)
        self.NumeroF.SetMinSize((126, 40))
        self.sizer_6.Add(self.NumeroF, 0, wx.ALIGN_CENTER_VERTICAL, 0)

        self.sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_5.Add(self.sizer_7, 1, wx.EXPAND, 0)

        self.label_2 = wx.StaticText(self, wx.ID_ANY, u"Número de columnas :")
        self.label_2.SetMinSize((126, 40))
        self.sizer_7.Add(self.label_2, 0, 0, 0)

        self.NumeroC = wx.SpinCtrl(self, wx.ID_ANY, "0", min=0, max=8)
        self.NumeroC.SetMinSize((126, 40))
        self.sizer_7.Add(self.NumeroC, 0, 0, 0)

        sizer_2 = wx.StdDialogButtonSizer()
        self.sizer_1.Add(sizer_2, 0, wx.ALL, 4)
 
       

        self.button_OK = wx.Button(self, wx.ID_OK, "")
        self.button_OK.SetMinSize((100, 35))
        self.button_OK.SetDefault()
        sizer_2.AddButton(self.button_OK)

        self.button_CANCEL = wx.Button(self, wx.ID_CANCEL, "")
        self.button_CANCEL.SetMinSize((100, 35))
        sizer_2.AddButton(self.button_CANCEL)

        sizer_2.Realize()

        self.SetSizer(self.sizer_1)

        self.SetAffirmativeId(self.button_OK.GetId())
        self.SetEscapeId(self.button_CANCEL.GetId())



        self.Bind(wx.EVT_RADIOBUTTON,self.tabAleatorio,self.radio_btn_3)
        self.Bind(wx.EVT_RADIOBUTTON,self.aleatColumyFilas,self.radio_btn_2)
        self.Bind(wx.EVT_RADIOBUTTON,self.preguntaFichero,self.radio_btn_1)
        self.Bind(wx.EVT_BUTTON,self.botonOK,self.button_OK)
        self.Bind(wx.EVT_BUTTON,self.botonCANCEL,self.button_CANCEL)

        self.Layout()

    def setFrame2(self,frame):
       self.frame2=frame

    def setFichero(self,fichero):
       self.frame3=fichero
    
    def getFrame2(self):
        return self.frame2
    
    def getFichero(self):
        return self.frame3
    
    def tabAleatorio(self,event):
        self.boton=3
        self.label_1.Hide()
        self.NumeroF.Hide()
        self.label_2.Hide()
        self.NumeroC.Hide() 
          
    def preguntaFichero(self,event):
        self.boton=1
        self.label_1.Hide()
        self.NumeroF.Hide()
        self.label_2.Hide()
        self.NumeroC.Hide()
           
    def aleatColumyFilas(self,event):
        self.boton=2
        self.label_1.Show()
        self.NumeroF.Show()
        self.label_2.Show()
        self.NumeroC.Show()
            
    def botonOK(self,event):
        sonido = Sound("./ZippoLighterFlick PE1033011")
        sonido.Play()
        if self.boton==3:
            dlg=self.getFrame2()
            self.filas=6
            self.columnas=6
            self.frame2.setFilas(self.filas)
            self.frame2.setColumnas(self.columnas)
            self.juego = codigCesar.Juego("","movimiento.txt")
            self.frame2.setJuego(self.juego)
            self.frame2.Iniciar()
            dlg.Show()
            self.Hide()
        elif self.boton==2:
            dlg=self.getFrame2()
            self.filas=self.NumeroF.GetValue()
            self.columnas=self.NumeroC .GetValue()
            self.frame2.setFilas(self.filas)
            self.frame2.setColumnas(self.columnas)
            self.juego = codigCesar.Juego("", "")
            self.frame2.setJuego(self.juego)
            self.frame2.Iniciar()
            dlg.Show()
            self.Hide()
        else:
            dlg=self.getFichero()
            dlg.Show()
            self.Hide()

    def botonCANCEL(self):
        sonido = Sound("./WoodImpactShrtBig PE1057005")
        sonido.Play()
        
# end of class MyDialog

class MyDialog1(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog1.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((800, 100))
        self.SetTitle("dialog_1")

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_3, 1, wx.EXPAND, 0)

        label_1 = wx.StaticText(self, wx.ID_ANY, "Escriba el fichero del tablero:")
        sizer_3.Add(label_1, 0, 0, 0)

        self.text_ctrl_1 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_1.SetMinSize((213, 23))
        sizer_3.Add(self.text_ctrl_1, 0, 0, 0)

        label_2 = wx.StaticText(self, wx.ID_ANY, "Escriba el archivo de secuencia:")
        sizer_3.Add(label_2, 0, 0, 0)

        self.text_ctrl_2 = wx.TextCtrl(self, wx.ID_ANY, "")
        self.text_ctrl_2.SetMinSize((213, 23))
        sizer_3.Add(self.text_ctrl_2, 0, 0, 0)

        sizer_2 = wx.StdDialogButtonSizer()
        sizer_1.Add(sizer_2, 0, wx.ALIGN_RIGHT | wx.ALL, 4)

        self.button_OK = wx.Button(self, wx.ID_OK, "")
        self.button_OK.SetDefault()
        sizer_2.AddButton(self.button_OK)

        self.button_CANCEL = wx.Button(self, wx.ID_CANCEL, "")
        sizer_2.AddButton(self.button_CANCEL)

        sizer_2.Realize()

        self.SetSizer(sizer_1)

        self.SetAffirmativeId(self.button_OK.GetId())
        self.SetEscapeId(self.button_CANCEL.GetId())

        self.SetAffirmativeId(self.button_OK.GetId())
        self.SetEscapeId(self.button_CANCEL.GetId())
        
        self.Bind(wx.EVT_BUTTON,self.recogePalabras,self.button_OK)
        self.Bind(wx.EVT_BUTTON,self.Vuelve,self.button_CANCEL)

        self.Layout()
    
    def setableroFichero(self,frame):
       self.frame2=frame

    def getableroFichero(self):
        return self.frame2
    
    
    def recogePalabras(self,event):
        sonido = Sound("./ZippoLighterFlick PE1033011")
        sonido.Play()
        dlg=self.getableroFichero()
        self.fich_tab=self.text_ctrl_1.GetLineText(0)
        self.fich_sec=self.text_ctrl_2.GetLineText(0)
        self.juego = codigCesar.Juego(self.fich_tab, self.fich_sec)
        self.frame2.setJuego(self.juego)
        with open(self.fich_tab) as fichero:
             total_files = sum(1 for line in fichero)
             fichero.seek(0)
             total_columns=(fichero.readlines(0))
             total_columns=len(total_columns[0])-1
        fichero.close()
        self.filas=total_files
        self.columnas=total_columns
        self.frame2.setFilas(self.filas)
        self.frame2.setColumnas(self.columnas)
        self.frame2.Iniciar()
        dlg.Show()
        self.Hide()

    def Vuelve(self,event):
        sonido = Sound("./WoodImpactShrtBig PE1057005")
        sonido.Play()
        
        # end wxGlade

# end of class MyDialog1

class MyApp(wx.App):
    def OnInit(self):
        self.fich_tab=("")
        self.fich_sec =("")
        self.juego = codigCesar.Juego(self.fich_tab, self.fich_sec)
        self.frame = MyDialog(None, wx.ID_ANY, "")
        self.frame2=MyFrame(None, wx.ID_ANY, "")
        self.frame3=MyDialog1(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        self.frame2.setJuego(self.juego)
        #self.SetTopWindow(self.frame2)
        self.frame.setFrame2(self.frame2)
        self.frame.setFichero(self.frame3)
        self.frame3.setableroFichero(self.frame2)
        self.frame2.setFrame(self.frame)
        #self.SetTopWindow(self.frame3)

        return True

# end of class MyApp

if __name__ == "__main__":
    for i in range(3):
        coordenada=0
        app = MyApp(0)
        if coordenada != 0:
            i+=1
        app.MainLoop()
